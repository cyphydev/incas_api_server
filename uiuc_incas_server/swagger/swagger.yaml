openapi: 3.0.0
info:
  title: INCAS TA2-UIUC Datatypes
  description: This API document is defined based on INCAS Common Datatypes version
    0.0.3.
  contact:
    name: Shengzhong Liu (sl29@illinois.edu)
  version: 1.0.0
servers:
- url: https://incas.cs.illinois.edu:8443/api/v1
  description: UIUC INCAS API Server
paths:
  /message/{id}:
    get:
      tags:
      - message
      description: Returns specific message by id
      operationId: message_id_get
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Required message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiucMessage'
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/enrichments:
    get:
      tags:
      - message
      description: "Returns current message enrichment meta by providerName, enrichmentName\
        \ and version"
      operationId: message_enrichments_get
      parameters:
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of message enrichment meta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageEnrichmentMeta'
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    put:
      tags:
      - message
      description: "Updates message enrichment meta (after all messages have been\
        \ added) by providerName, enrichmentName and version"
      operationId: message_enrichments_put
      parameters:
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The new enrichment meta to update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MessageEnrichmentMeta'
        required: true
      responses:
        "200":
          description: A list of newly added message enrichment meta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageEnrichmentMeta'
        "400":
          description: Invalid input
        "409":
          description: Input already exists
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    post:
      tags:
      - message
      description: Creates message enrichment meta (post after all messages have been
        added)
      operationId: message_enrichments_post
      requestBody:
        description: The new enrichment meta to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MessageEnrichmentMeta'
        required: true
      responses:
        "201":
          description: A list of newly added message enrichment meta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageEnrichmentMeta'
        "400":
          description: Invalid input
        "409":
          description: Input already exists
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    delete:
      tags:
      - message
      description: "Delete specific message enrichment meta by providerName, enrichmentName\
        \ and version"
      operationId: message_enrichments_delete
      parameters:
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "404":
          description: id not found
        "401":
          description: Unauthorized
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/{id}/enrichments:
    get:
      tags:
      - message
      description: "Returns all visible matched enrichment for the specific message\
        \ by type, providerName and version"
      operationId: message_id_enrichments_get
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of message enrichments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageEnrichment'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    put:
      tags:
      - message
      description: "Update the enrichments for specific message by type, providerName\
        \ and version"
      operationId: message_id_enrichments_put
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The new enrichments to update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MessageEnrichment'
        required: true
      responses:
        "200":
          description: A list of updated message enrichments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageEnrichment'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    post:
      tags:
      - message
      description: Creates new enrichments for specific message
      operationId: message_id_enrichments_post
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new enrichment to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MessageEnrichment'
        required: true
      responses:
        "201":
          description: A list of new message enrichments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageEnrichment'
                x-content-type: application/json
        "400":
          description: Invalid input
        "409":
          description: Input already exists
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    delete:
      tags:
      - message
      description: "Delete the enrichments for specific message by type, providerName\
        \ and version"
      operationId: message_id_enrichments_delete
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "404":
          description: id not found
        "401":
          description: Unauthorized
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /actor/{id}:
    get:
      tags:
      - actor
      description: Returns specific actor by id
      operationId: actor_id_get
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A list of actor enrichments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/enrichments:
    get:
      tags:
      - actor
      description: "Returns current actor enrichment meta by providerName, enrichmentName\
        \ and version"
      operationId: actor_enrichments_get
      parameters:
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of actor enrichment meta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorEnrichmentMeta'
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    put:
      tags:
      - actor
      description: "Updates actor enrichment meta (after all actors have been added)\
        \ by providerName, enrichmentName and version"
      operationId: actor_enrichments_put
      parameters:
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The new enrichment meta to update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorEnrichmentMeta'
        required: true
      responses:
        "200":
          description: A list of newly added actor enrichment meta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorEnrichmentMeta'
        "400":
          description: Invalid input
        "409":
          description: Input already exists
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: Creates actor enrichment meta (post after all actors have been
        added)
      operationId: actor_enrichments_post
      requestBody:
        description: The new enrichment meta to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorEnrichmentMeta'
        required: true
      responses:
        "201":
          description: A list of newly added Actor enrichment meta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorEnrichmentMeta'
        "400":
          description: Invalid input
        "409":
          description: Input already exists
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    delete:
      tags:
      - actor
      description: "Delete specific message enrichment meta by providerName, enrichmentName\
        \ and version"
      operationId: actor_enrichments_delete
      parameters:
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "404":
          description: id not found
        "401":
          description: Unauthorized
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/{id}/enrichments:
    get:
      tags:
      - actor
      description: "Returns all matched enrichment for the specific actor by type,\
        \ providerName and version"
      operationId: actor_id_enrichments_get
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of actor enrichments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorEnrichment'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    put:
      tags:
      - actor
      description: "Update the enrichments for specific actor by type, providerName\
        \ and version"
      operationId: actor_id_enrichments_put
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The new enrichments to update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorEnrichment'
        required: true
      responses:
        "200":
          description: A list of updated actor enrichments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorEnrichment'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: Creates new enrichments for specific message
      operationId: actor_id_enrichments_post
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new enrichment to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorEnrichment'
        required: true
      responses:
        "201":
          description: A list of new actor enrichments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorEnrichment'
                x-content-type: application/json
        "400":
          description: Invalid input
        "409":
          description: Input already exists
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    delete:
      tags:
      - actor
      description: "Delete the enrichments for specific actor by type, providerName\
        \ and version"
      operationId: actor_id_enrichments_delete
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - numerical
          - array
          - text
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "404":
          description: id not found
        "401":
          description: Unauthorized
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /messageMessageGraph/{id}:
    get:
      tags:
      - graph
      description: Gets specific message-message graph information by id
      operationId: message_message_graph_id_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Required graph
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageMessageGraph'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    put:
      tags:
      - graph
      description: Update the specific message-message graph by id
      operationId: message_message_graph_id_put
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new graph to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageMessageGraph'
        required: true
      responses:
        "200":
          description: Updated graph
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageMessageGraph'
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    delete:
      tags:
      - graph
      description: Delete the specific graph by id
      operationId: message_message_graph_id_delete
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "404":
          description: id not found
        "401":
          description: Unauthorized
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /messageMessageGraph:
    get:
      tags:
      - graph
      description: "Gets graph id by providerName, timestamp and version"
      operationId: message_message_graph_get
      parameters:
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: timeStamp
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Required graph id
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    post:
      tags:
      - graph
      description: Creates new graphs
      operationId: message_message_graph_post
      requestBody:
        description: The new graphs to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MessageMessageGraph'
        required: true
      responses:
        "201":
          description: A list of new graphs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageMessageGraph'
                x-content-type: application/json
        "400":
          description: Invalid input
        "409":
          description: Input already exists
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /messageMessageGraph/{id}/neighbor:
    get:
      tags:
      - graph
      description: Gets the neighbors for specific node from specific graph by graph
        id and message's id
      operationId: message_message_graph_id_neighbor_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: messageID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Required neigbours
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/UiucMessage'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorMessageGraph/{id}:
    get:
      tags:
      - graph
      description: Gets specific actor-message graph information by id
      operationId: actor_message_graph_id_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Required graph
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorMessageGraph'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    put:
      tags:
      - graph
      description: Update the specific actor-message graph by id
      operationId: actor_message_graph_id_put
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new graph to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorMessageGraph'
        required: true
      responses:
        "200":
          description: Updated graph
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorMessageGraph'
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    delete:
      tags:
      - graph
      description: Delete the specific graph by id
      operationId: actor_message_graph_id_delete
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "404":
          description: id not found
        "401":
          description: Unauthorized
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorMessageGraph:
    get:
      tags:
      - graph
      description: "Gets graph id by providerName, timestamp and version"
      operationId: actor_message_graph_get
      parameters:
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: timeStamp
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Required graph id
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    post:
      tags:
      - graph
      description: Creates new graphs
      operationId: actor_message_graph_post
      requestBody:
        description: The new graphs to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorMessageGraph'
        required: true
      responses:
        "201":
          description: A list of new graphs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorMessageGraph'
                x-content-type: application/json
        "400":
          description: Invalid input
        "409":
          description: Input already exists
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorMessageGraph/{id}/neighbor:
    get:
      tags:
      - graph
      description: Gets the neighbors for specific node from specific graph by graph
        id and message or actor id
      operationId: actor_message_graph_id_neighbor_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: messageID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: actorID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Required neigbours
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    oneOf:
                    - $ref: '#/components/schemas/UiucMessage'
                    - $ref: '#/components/schemas/UiucActor'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorActorGraph/{id}:
    get:
      tags:
      - graph
      description: Gets specific actor-actor graph information by id
      operationId: actor_actor_graph_id_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Required graph
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorActorGraph'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    put:
      tags:
      - graph
      description: Update the specific actor-actor graph by id
      operationId: actor_actor_graph_id_put
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new graph to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorActorGraph'
        required: true
      responses:
        "200":
          description: Updated graph
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorActorGraph'
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    delete:
      tags:
      - graph
      description: Delete the specific graph by id
      operationId: actor_actor_graph_id_delete
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "404":
          description: id not found
        "401":
          description: Unauthorized
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorActorGraph:
    get:
      tags:
      - graph
      description: "Gets graph id by providerName, timestamp and version"
      operationId: actor_actor_graph_get
      parameters:
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: timeStamp
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Required graph id
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    post:
      tags:
      - graph
      description: Creates new graphs
      operationId: actor_actor_graph_post
      requestBody:
        description: The new graphs to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorActorGraph'
        required: true
      responses:
        "201":
          description: A list of new graphs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorActorGraph'
                x-content-type: application/json
        "400":
          description: Invalid input
        "409":
          description: Input already exists
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorActorGraph/{id}/neighbor:
    get:
      tags:
      - graph
      description: Gets the neighbors for specific node from specific graph by graph
        id and actor id
      operationId: actor_actor_graph_id_neighbor_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: actorID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Required neigbours
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/UiucActor'
                x-content-type: application/json
        "404":
          description: Not found
        "400":
          description: Invalid query
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
components:
  schemas:
    UiucMessage:
      description: "a post of social media, news, etc."
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          enrichments:
            type: array
            items:
              $ref: '#/components/schemas/MessageEnrichment'
    UiucActor:
      allOf:
      - $ref: '#/components/schemas/Actor'
      - type: object
        properties:
          enrichments:
            type: array
            items:
              $ref: '#/components/schemas/ActorEnrichment'
    UiucSegment:
      required:
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: The unique segment identifier
          format: uuid
        referencedActorUuid:
          type: array
          items:
            type: string
            format: uuid
        extraAttributes:
          $ref: '#/components/schemas/ExtraAttributes'
      description: A set of Actors
    BaseMessageEnrichmentMeta:
      required:
      - enrichmentType
      type: object
      properties:
        providerName:
          type: string
          description: "The team (e.g., UIUC-DMG) who provides the enrichment."
        enrichmentName:
          type: string
          description: "The enrichment (e.g., Concern-Stance) name for the enrichment."
        version:
          type: string
          description: "The version within the same (provider, name)."
        enrichmentType:
          type: string
          description: For discriminator
          enum:
          - category
          - numerical
          - array
          - text
      description: Stores the meta data related to enrichment algorithm.
      discriminator:
        propertyName: enrichmentType
        mapping:
          category: '#/components/schemas/CategoryMessageEnrichmentMeta'
          numerical: '#/components/schemas/NumericalMessageEnrichmentMeta'
          array: '#/components/schemas/ArrayMessageEnrichmentMeta'
          text: '#/components/schemas/TextMessageEnrichmentMeta'
    BaseActorEnrichmentMeta:
      required:
      - enrichmentType
      type: object
      properties:
        providerName:
          type: string
          description: "The team (e.g., UIUC-DMG) who provides the enrichment."
        enrichmentName:
          type: string
          description: "The enrichment (e.g., Concern-Stance) name for the enrichment."
        version:
          type: string
          description: "The version within the same (provider, name)."
        enrichmentType:
          type: string
          description: For discriminator
          enum:
          - category
          - numerical
          - array
          - text
      description: Stores the meta data related to enrichment algorithm.
      discriminator:
        propertyName: enrichmentType
        mapping:
          category: '#/components/schemas/CategoryActorEnrichmentMeta'
          numerical: '#/components/schemas/NumericalActorEnrichmentMeta'
          array: '#/components/schemas/ArrayActorEnrichmentMeta'
          text: '#/components/schemas/TextActorEnrichmentMeta'
    CategoryMessageEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
      - type: object
        additionalProperties:
          type: string
        description: Defines all available categories in category message enrichment.
    NumericalMessageEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
      - type: object
    ArrayMessageEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
      - type: object
        additionalProperties:
          type: string
        description: "Defines the hash map (posID, class) for multi-label regression/classification."
    TextMessageEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
      - type: object
    CategoryActorEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichmentMeta'
      - type: object
        additionalProperties:
          type: string
        description: Defines all available categories in category actor enrichment.
    NumericalActorEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichmentMeta'
      - type: object
    ArrayActorEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichmentMeta'
      - type: object
        additionalProperties:
          type: string
        description: "Defines the hash map of (posID, class) for multi-class regression/classification."
    TextActorEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichmentMeta'
      - type: object
    MessageEnrichmentMeta:
      type: object
      description: This is the unified interface for message enrichment algorithm
        meta informaiton.
      discriminator:
        propertyName: enrichment_type
        mapping:
          category: '#/components/schemas/CategoryMessageEnrichmentMeta'
          numerical: '#/components/schemas/NumericalMessageEnrichmentMeta'
          array: '#/components/schemas/ArrayMessageEnrichmentMeta'
          text: '#/components/schemas/TextMessageEnrichmentMeta'
      oneOf:
      - $ref: '#/components/schemas/CategoryMessageEnrichmentMeta'
      - $ref: '#/components/schemas/NumericalMessageEnrichmentMeta'
      - $ref: '#/components/schemas/ArrayMessageEnrichmentMeta'
      - $ref: '#/components/schemas/TextMessageEnrichmentMeta'
    ActorEnrichmentMeta:
      type: object
      description: This is the unified interface for actor enrichment algorithm meta
        informaiton.
      discriminator:
        propertyName: enrichment_type
        mapping:
          category: '#/components/schemas/CategoryActorEnrichmentMeta'
          numerical: '#/components/schemas/NumericalActorEnrichmentMeta'
          array: '#/components/schemas/ArrayActorEnrichmentMeta'
          text: '#/components/schemas/TextActorEnrichmentMeta'
      oneOf:
      - $ref: '#/components/schemas/CategoryActorEnrichmentMeta'
      - $ref: '#/components/schemas/NumericalActorEnrichmentMeta'
      - $ref: '#/components/schemas/ArrayActorEnrichmentMeta'
      - $ref: '#/components/schemas/TextActorEnrichmentMeta'
    BaseMessageEnrichment:
      required:
      - enrichmentType
      type: object
      properties:
        messageUuid:
          type: string
        providerName:
          type: string
          description: "The team (e.g., UIUC-DMG) who provides the enrichment."
        enrichmentName:
          type: string
          description: "The enrichment (e.g., Concern-Stance) name for the enrichment."
        version:
          type: string
          description: "The version within the same (provider, name)."
        confidence:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: "The confidence that this enrichment is correct, expressed\
            \ as a percentage between 0.0 and 1.0"
          format: double
        enrichmentType:
          type: string
          description: For discriminator
          enum:
          - category
          - numerical
          - array
          - text
      description: Stores data fields common to all types of message enrichment.
      discriminator:
        propertyName: enrichmentType
        mapping:
          category: '#/components/schemas/CategoryMessageEnrichment'
          numerical: '#/components/schemas/NumericalMessageEnrichment'
          array: '#/components/schemas/ArrayMessageEnrichment'
          text: '#/components/schemas/TextMessageEnrichment'
    CategoryMessageEnrichment:
      description: This defines a enumeration/category enrichment.
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichment'
      - type: object
        properties:
          attributeValue:
            type: string
    NumericalMessageEnrichment:
      description: Defines a numeric enrichment.
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichment'
      - type: object
        properties:
          attributeValue:
            type: number
            format: float
    ArrayMessageEnrichment:
      description: Defines a vector/matrix/tensor or multi-label enrichment.
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichment'
      - type: object
        properties:
          attributeValue:
            type: array
            items:
              type: number
              format: float
    TextMessageEnrichment:
      description: This defines a text enrichment.
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichment'
      - type: object
        properties:
          attributeValue:
            type: string
    MessageEnrichment:
      type: object
      description: This is the unified interface for message enrichment output.
      discriminator:
        propertyName: enrichment_type
        mapping:
          category: '#/components/schemas/CategoryMessageEnrichment'
          numerical: '#/components/schemas/NumericalMessageEnrichment'
          array: '#/components/schemas/ArrayMessageEnrichment'
          text: '#/components/schemas/TextMessageEnrichment'
      oneOf:
      - $ref: '#/components/schemas/CategoryMessageEnrichment'
      - $ref: '#/components/schemas/NumericalMessageEnrichment'
      - $ref: '#/components/schemas/ArrayMessageEnrichment'
      - $ref: '#/components/schemas/TextMessageEnrichment'
    BaseActorEnrichment:
      required:
      - enrichmentType
      type: object
      properties:
        actorUuid:
          type: string
        providerName:
          type: string
          description: "The team (e.g., USC) who provides the enrichment."
        enrichmentName:
          type: string
          description: "The enrichment (e.g., age, gender) name for the enrichment."
        version:
          type: string
          description: "The version within the same (provider, enrichmentName)."
        confidence:
          maximum: 1.0
          minimum: 0.0
          type: number
          description: "The confidence that this enrichment is correct, expressed\
            \ as a percentage between 0.0 and 1.0"
          format: double
        enrichmentType:
          type: string
          description: For discriminator
          enum:
          - category
          - numerical
          - array
          - text
      description: Stores data fields common to all types of actor enrichment.
      discriminator:
        propertyName: enrichmentType
        mapping:
          category: '#/components/schemas/CategoryActorEnrichment'
          numerical: '#/components/schemas/NumericalActorEnrichment'
          array: '#/components/schemas/ArrayActorEnrichment'
          text: '#/components/schemas/TextActorEnrichment'
    CategoryActorEnrichment:
      description: Defines a enumeration/category enrichment for actor.
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichment'
      - type: object
        properties:
          attributeValue:
            type: string
    NumericalActorEnrichment:
      description: Defines a numerical enrichment for actor.
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichment'
      - type: object
        properties:
          attributeValue:
            type: number
    ArrayActorEnrichment:
      description: Defines a vector/matrix/tensor or multi-label enrichment for actor.
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichment'
      - type: object
        properties:
          attributeValue:
            type: array
            items:
              type: number
              format: float
    TextActorEnrichment:
      description: This defines a text enrichment for actor.
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichment'
      - type: object
        properties:
          attributeValue:
            type: string
    ActorEnrichment:
      type: object
      description: This is the unified interface for actor enrichment output.
      discriminator:
        propertyName: enrichment_type
        mapping:
          enumeration: '#/components/schemas/CategoryActorEnrichment'
          numerical: '#/components/schemas/NumericalActorEnrichment'
          array: '#/components/schemas/ArrayActorEnrichment'
          text: '#/components/schemas/TextActorEnrichment'
      oneOf:
      - $ref: '#/components/schemas/CategoryActorEnrichment'
      - $ref: '#/components/schemas/NumericalActorEnrichment'
      - $ref: '#/components/schemas/ArrayActorEnrichment'
      - $ref: '#/components/schemas/TextActorEnrichment'
    BaseEdge:
      required:
      - edgeType
      type: object
      properties:
        edgeId:
          type: string
        timeStamp:
          type: string
        providerName:
          type: string
          description: The team who builds this graph.
        enrichmentName:
          type: string
          description: The type of enrichment used to construct the graph.
        distanceName:
          type: string
          description: The type of distance used to contruct the graph edges.
        version:
          type: string
          description: "The version ID within the same (providerName, enrichmentName,\
            \ distanceName)"
        distance:
          maximum: 1.0
          minimum: 0.0
          type: number
          format: float
        edgeType:
          type: string
          description: For discriminator
          enum:
          - MessageToMessageEdge
          - ActorToActorEdge
          - ActorToMessageEdge
          - MessageToActorEdge
      description: Defines the base edge in the graph.
      discriminator:
        propertyName: edgeType
    MessageToMessageEdge:
      description: Defines the message-to-message edge.
      allOf:
      - $ref: '#/components/schemas/BaseEdge'
      - type: object
        properties:
          messageId1:
            type: string
          messageId2:
            type: string
          weight:
            type: number
            format: float
    ActorToActorEdge:
      description: Defines the actor-to-actor edge.
      allOf:
      - $ref: '#/components/schemas/BaseEdge'
      - type: object
        properties:
          actorId1:
            type: string
          actorId2:
            type: string
          weight:
            type: number
            format: float
    ActorToMessageEdge:
      description: Defines the actor-to-message edge.
      allOf:
      - $ref: '#/components/schemas/BaseEdge'
      - type: object
        properties:
          messageId:
            type: string
          actorId:
            type: string
          actionType:
            type: string
    MessageToActorEdge:
      description: Defines the message-to-actor edge.
      allOf:
      - $ref: '#/components/schemas/BaseEdge'
      - type: object
        properties:
          messageId:
            type: string
          actorId:
            type: string
          actionType:
            type: string
    ActorMessageEdge:
      type: object
      description: Defines the general edge in actor-message graph.
      discriminator:
        propertyName: edge_type
      oneOf:
      - $ref: '#/components/schemas/ActorToMessageEdge'
      - $ref: '#/components/schemas/MessageToActorEdge'
    BaseGraph:
      required:
      - graphType
      type: object
      properties:
        graphId:
          type: string
          description: This is the unique ID associated to the graph instance.
        providerName:
          type: string
          description: The team who builds this graph.
        graphName:
          type: string
          description: The name assigned to the algorithm/method used to construct
            the graph.
        distanceName:
          type: string
          description: The distance function used to build the graph.
        version:
          type: string
          description: "The version ID within the same (providerName, graphName, distanceName)"
        timeStamp:
          type: string
          description: Used for distinguishing the dynamic graph on time dimension.
        platform:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
        graphType:
          type: string
          description: For discriminator
          enum:
          - MessageMessageGraph
          - ActorActorGraph
          - ActorMessageGraph
      description: Defines the base graph version.
      discriminator:
        propertyName: graphType
    MessageMessageGraph:
      description: Defines the message-to-message graph.
      allOf:
      - $ref: '#/components/schemas/BaseGraph'
      - type: object
        properties:
          enrichmentName:
            type: string
            description: The type of enrichment used to construct the msg2msg graph.
          edges:
            type: array
            items:
              $ref: '#/components/schemas/MessageToMessageEdge'
    ActorActorGraph:
      description: Defines the actor-to-actor graph.
      allOf:
      - $ref: '#/components/schemas/BaseGraph'
      - type: object
        properties:
          enrichmentName:
            type: string
            description: The type of enrichment used to construct the act2act graph.
          edges:
            type: array
            items:
              $ref: '#/components/schemas/ActorToActorEdge'
    ActorMessageGraph:
      description: Defines the actor-to-message graph.
      allOf:
      - $ref: '#/components/schemas/BaseGraph'
      - type: object
        properties:
          enrichmentName:
            type: string
            description: The type of enrichment used to construct the act2act graph.
          edges:
            type: array
            items:
              $ref: '#/components/schemas/ActorMessageEdge'
    Response:
      description: how to define it?
    Actor:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        actorName:
          type: string
        links:
          $ref: '#/components/schemas/Links'
        entityType:
          type: string
          enum:
          - ENTITY_UNSPECIFIED
          - Person
          - Media
          - Organization
          - Government
        mediaResources:
          type: array
          items:
            $ref: '#/components/schemas/MediaResource'
        knowledgeBaseUrl:
          type: string
        language:
          type: string
        description:
          type: string
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
        extraAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtraAttribute'
      example:
        knowledgeBaseUrl: knowledgeBaseUrl
        mediaResources:
        - accountStatus: accountStatus
          accountId: accountId
          hashedUserNames:
          - hashedUserNames
          - hashedUserNames
          accountType: MEDIA_UNSPECIFIED
          displayNames:
          - displayNames
          - displayNames
          verified: true
          userNames:
          - userNames
          - userNames
          url: url
        - accountStatus: accountStatus
          accountId: accountId
          hashedUserNames:
          - hashedUserNames
          - hashedUserNames
          accountType: MEDIA_UNSPECIFIED
          displayNames:
          - displayNames
          - displayNames
          verified: true
          userNames:
          - userNames
          - userNames
          url: url
        entityType: ENTITY_UNSPECIFIED
        name: name
        description: description
        annotations:
        - offsets:
          - end: 6
            begin: 0
          - end: 6
            begin: 0
          confidence: 1.4658129805029452
          name: name
          id: id
          text: text
          type: type
          providerName: providerName
        - offsets:
          - end: 6
            begin: 0
          - end: 6
            begin: 0
          confidence: 1.4658129805029452
          name: name
          id: id
          text: text
          type: type
          providerName: providerName
        actorName: actorName
        links:
          self: self
        language: language
        id: id
        extraAttributes:
        - attributeValue: attributeValue
          name: name
          id: id
          attributeKey: attributeKey
          providerName: providerName
        - attributeValue: attributeValue
          name: name
          id: id
          attributeKey: attributeKey
          providerName: providerName
    Links:
      type: object
      properties:
        self:
          type: string
      example:
        self: self
    MediaResource:
      type: object
      properties:
        accountType:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
        accountId:
          type: string
        userNames:
          type: array
          items:
            type: string
        hashedUserNames:
          type: array
          items:
            type: string
        accountStatus:
          type: string
        displayNames:
          type: array
          items:
            type: string
        verified:
          type: boolean
        url:
          type: string
      example:
        accountStatus: accountStatus
        accountId: accountId
        hashedUserNames:
        - hashedUserNames
        - hashedUserNames
        accountType: MEDIA_UNSPECIFIED
        displayNames:
        - displayNames
        - displayNames
        verified: true
        userNames:
        - userNames
        - userNames
        url: url
    Annotation:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        providerName:
          type: string
        type:
          type: string
        offsets:
          type: array
          items:
            $ref: '#/components/schemas/Offset'
        text:
          type: string
        confidence:
          type: number
          format: double
      example:
        offsets:
        - end: 6
          begin: 0
        - end: 6
          begin: 0
        confidence: 1.4658129805029452
        name: name
        id: id
        text: text
        type: type
        providerName: providerName
    Offset:
      type: object
      properties:
        begin:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
      example:
        end: 6
        begin: 0
    ExtraAttribute:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        providerName:
          type: string
        attributeKey:
          type: string
        attributeValue:
          type: string
      example:
        attributeValue: attributeValue
        name: name
        id: id
        attributeKey: attributeKey
        providerName: providerName
    Message:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        title:
          type: string
        contentText:
          type: string
        authorActor:
          $ref: '#/components/schemas/Actor'
        mediaType:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
        mediaTypeAttributes:
          $ref: '#/components/schemas/OneOfMediaTypeAttributes'
        timePublished:
          type: integer
          format: int64
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        language:
          type: string
        embeddedUrls:
          type: array
          items:
            type: string
        imageUrls:
          type: array
          items:
            type: string
        dataTags:
          type: array
          items:
            type: string
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
        extraAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtraAttribute'
    OneOfMediaTypeAttributes:
      type: object
      properties:
        redditData:
          $ref: '#/components/schemas/RedditData'
        twitterData:
          $ref: '#/components/schemas/TwitterData'
    RedditData:
      type: object
    TwitterData:
      type: object
      properties:
        likeCount:
          type: integer
          format: int32
        retweetCount:
          type: integer
          format: int32
        twitterAuthorScreenname:
          type: string
        tweetId:
          type: string
        twitterUserId:
          type: string
        followingCount:
          type: integer
          format: int32
        followerCount:
          type: integer
          format: int32
        engagementType:
          type: string
          enum:
          - ENGAGEMENT_UNSPECIFIED
          - mention
          - quote
          - reply
          - retweet
          - tweet
          - page_post
        engagementParentId:
          type: string
        mentionedUsers:
          type: array
          items:
            type: string
    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    ExtraAttributes:
      type: object
      additionalProperties:
        type: string
      description: "This is a hash map (or dictionary) with strings as keys and strings\
        \ as values, that is used to put custom user data on an object"

