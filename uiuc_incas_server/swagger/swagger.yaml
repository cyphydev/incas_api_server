openapi: 3.0.0
info:
  title: INCAS TA2-UIUC Datatypes
  description: This API document is defined based on INCAS Common Datatypes version
    0.0.6.
  contact:
    name: Shengzhong Liu (sl29@illinois.edu)
  version: 1.1.0
servers:
- url: http://incas.cs.illinois.edu:8443/api/v1
  description: UIUC INCAS API Server
paths:
  /message/count:
    get:
      tags:
      - message
      description: Return the number of message IDs available.
      operationId: message_count_get
      parameters:
      - name: mediaType
        in: query
        description: Type of entity to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
      responses:
        "200":
          description: Requested list
          content:
            text/plain:
              schema:
                type: integer
                description: The number of messages available
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/list:
    get:
      tags:
      - message
      description: "Return list of message IDs available in [begin, end)."
      operationId: message_list_get
      parameters:
      - name: begin
        in: query
        description: Begin
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: end
        in: query
        description: End
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: mediaType
        in: query
        description: Type of entity to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
      responses:
        "200":
          description: Requested list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageIdResponse'
                x-content-type: application/json
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/enrichments/meta:
    get:
      tags:
      - message
      description: "Returns current message enrichment metas by providerName, enrichmentName\
        \ and version."
      operationId: message_enrichments_meta_get
      parameters:
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of message enrichment meta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageEnrichmentMeta'
                x-content-type: application/json
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    put:
      tags:
      - message
      description: "Updates message enrichment meta (after all messages have been\
        \ added) by providerName, enrichmentName and version."
      operationId: message_enrichments_meta_put
      requestBody:
        description: The new enrichment meta to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    post:
      tags:
      - message
      description: Submits a message enrichment meta (post after all messages have
        been added).
      operationId: message_enrichments_meta_post
      requestBody:
        description: The new enrichment meta to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    delete:
      tags:
      - message
      description: "Delete specific message enrichment meta by providerName, enrichmentName\
        \ and version."
      operationId: message_enrichments_meta_delete
      parameters:
      - name: enrichmentName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/enrichments/batchGet:
    post:
      tags:
      - message
      description: Returns a batch of enrichments given a list of IDs and specifications.
      operationId: message_enrichments_batch_get
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageEnrichmentsBatchGetBody'
        required: true
      responses:
        "200":
          description: A batch of list of enrichments
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/MessageEnrichment'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/enrichments/batchDelete/validate:
    post:
      tags:
      - message
      description: "Validation endpoint for batch enrichment deletion, successful\
        \ attempt will return a token."
      operationId: message_enrichments_batch_delete_validate
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageEnrichmentsBatchDeleteBody'
        required: true
      responses:
        "200":
          description: Examined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageEnrichmentsBatchValidationResponse'
        "400":
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/enrichments/batchDelete:
    post:
      tags:
      - message
      description: Deletes a batch of enrichments given a list of IDs and specifications.
      operationId: message_enrichments_batch_delete
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageEnrichmentsBatchDeleteBody'
        required: true
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/enrichments/batch/validate:
    put:
      tags:
      - message
      description: "Validation endpoint for batch enrichment update, successful attempt\
        \ will return a token."
      operationId: message_enrichments_batch_put_validate
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/BaseMessageEnrichment'
        required: true
      responses:
        "200":
          description: Examined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageEnrichmentsBatchValidationResponse'
        "400":
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    post:
      tags:
      - message
      description: "Validation endpoint for batch enrichment creation, successful\
        \ attempt will return a token."
      operationId: message_enrichments_batch_post_validate
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/BaseMessageEnrichment'
        required: true
      responses:
        "200":
          description: Examined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageEnrichmentsBatchValidationResponse'
        "400":
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/enrichments/batch:
    put:
      tags:
      - message
      description: Updates a enrichment for each message ID.
      operationId: message_enrichments_batch_put
      requestBody:
        description: Map of IDs and enrichments
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/BaseMessageEnrichment'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    post:
      tags:
      - message
      description: Submits a enrichment for each message ID.
      operationId: message_enrichments_batch_post
      requestBody:
        description: Map of IDs and enrichments
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/BaseMessageEnrichment'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/{id}:
    get:
      tags:
      - message
      description: Returns specific message by id.
      operationId: message_id_get
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: withEnrichment
        in: query
        description: Whether to retrieve enrichments
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dev
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Requested message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiucMessage'
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/{id}/enrichments:
    get:
      tags:
      - message
      description: "Returns all visible matched enrichment for the specific message\
        \ by type, providerName and version."
      operationId: message_id_enrichments_get
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dev
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: A list of message enrichments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageEnrichment'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    put:
      tags:
      - message
      description: "Update a enrichment for specific message by type, providerName\
        \ and version."
      operationId: message_id_enrichments_put
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new enrichments to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseMessageEnrichment'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    post:
      tags:
      - message
      description: Submits a new enrichment for specific message.
      operationId: message_id_enrichments_post
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new enrichment to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseMessageEnrichment'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
    delete:
      tags:
      - message
      description: "Delete a enrichment for specific message by type, providerName\
        \ and version."
      operationId: message_id_enrichments_delete
      parameters:
      - name: id
        in: path
        description: Message ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /message/batchGet:
    post:
      tags:
      - message
      description: Returns a batch of messages given a list of IDs and specifications.
      operationId: message_batch_get
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageBatchGetBody'
        required: true
      responses:
        "200":
          description: A batch of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UiucMessage'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.message_controller
  /actor/count:
    get:
      tags:
      - actor
      description: Return the number of actor IDs available.
      operationId: actor_count_get
      parameters:
      - name: mediaType
        in: query
        description: Type of entity to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
      - name: entityType
        in: query
        description: Type of entity to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ENTITY_UNSPECIFIED
          - Person
          - Media
          - Organization
          - Government
      responses:
        "200":
          description: Requested list
          content:
            text/plain:
              schema:
                type: integer
                description: The number of actors available
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/list:
    get:
      tags:
      - actor
      description: "Return list of actor IDs available in [begin, end)."
      operationId: actor_list_get
      parameters:
      - name: begin
        in: query
        description: Begin
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: end
        in: query
        description: End
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: mediaType
        in: query
        description: Type of entity to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
      - name: entityType
        in: query
        description: Type of entity to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ENTITY_UNSPECIFIED
          - Person
          - Media
          - Organization
          - Government
      responses:
        "200":
          description: Requested list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorIdResponse'
                x-content-type: application/json
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/segments/meta:
    get:
      tags:
      - actor
      description: "Returns current actor segment collection metas by collectionName,\
        \ providerName, and version."
      operationId: actor_segments_meta_get
      parameters:
      - name: collectionName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of actor segment collection meta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UiucSegmentCollectionMeta'
                x-content-type: application/json
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    put:
      tags:
      - actor
      description: "Updates an actor segment collection meta (after all actors have\
        \ been added) by providerName, segmentCollectionName and version."
      operationId: actor_segments_meta_put
      requestBody:
        description: The new segment collection meta to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UiucSegmentCollectionMeta'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: Add a new segment collection meta
      operationId: actor_segments_meta_post
      requestBody:
        description: The new segment collection meta to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UiucSegmentCollectionMeta'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    delete:
      tags:
      - actor
      description: "Deletes the segment collection metas by segmentCollectionName,\
        \ providerName and version."
      operationId: actor_segments_meta_delete
      parameters:
      - name: collectionName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/enrichments/meta:
    get:
      tags:
      - actor
      description: "Returns current actor enrichment metas by providerName, enrichmentName\
        \ and version."
      operationId: actor_enrichments_meta_get
      parameters:
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of actor enrichment meta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorEnrichmentMeta'
                x-content-type: application/json
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    put:
      tags:
      - actor
      description: "Updates an actor enrichment meta (after all actors have been added)\
        \ by providerName, enrichmentName and version."
      operationId: actor_enrichments_meta_put
      requestBody:
        description: The new enrichment meta to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseActorEnrichmentMeta'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: Submits an actor enrichment meta (post after all actors have been
        added).
      operationId: actor_enrichments_meta_post
      requestBody:
        description: The new enrichment meta to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseActorEnrichmentMeta'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    delete:
      tags:
      - actor
      description: "Delete a specific message enrichment meta by providerName, enrichmentName\
        \ and version."
      operationId: actor_enrichments_meta_delete
      parameters:
      - name: enrichmentName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/segments/batchGet:
    post:
      tags:
      - actor
      description: Returns a batch of segment collections given a list of IDs and
        specifications.
      operationId: actor_segments_batch_get
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorSegmentsBatchGetBody'
        required: true
      responses:
        "200":
          description: A batch of list of segment collections
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ActorSegmentCollections'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/segments/batchDelete/validate:
    post:
      tags:
      - actor
      description: "Validation endpoint for batch segment deletion, successful attempt\
        \ will return a token."
      operationId: actor_segments_batch_delete_validate
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorSegmentsBatchDeleteBody'
        required: true
      responses:
        "200":
          description: Examined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorSegmentsBatchValidationResponse'
        "400":
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/segments/batchDelete:
    post:
      tags:
      - actor
      description: Deletes a batch of segment collections given a list of IDs and
        specifications.
      operationId: actor_segment_batch_delete
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorSegmentsBatchDeleteBody'
        required: true
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/segments/batch/validate:
    put:
      tags:
      - actor
      description: "Validation endpoint for batch segment update, successful attempt\
        \ will return a token."
      operationId: actor_segments_batch_put_validate
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ActorSegmentCollections'
        required: true
      responses:
        "200":
          description: Examined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorSegmentsBatchValidationResponse'
        "400":
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: "Validation endpoint for batch segment creation, successful attempt\
        \ will return a token."
      operationId: actor_segments_batch_post_validate
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ActorSegmentCollections'
        required: true
      responses:
        "200":
          description: Examined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorSegmentsBatchValidationResponse'
        "400":
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/segments/batch:
    put:
      tags:
      - actor
      description: Updates a segment collection for each actor ID.
      operationId: actor_segments_batch_put
      requestBody:
        description: Map of IDs and segment collections
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ActorSegmentCollections'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: Submits a segment collection for each actor ID.
      operationId: actor_segments_batch_post
      requestBody:
        description: Map of IDs and segment collections
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ActorSegmentCollections'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/enrichments/batchGet:
    post:
      tags:
      - actor
      description: Returns a batch of enrichments given a list of IDs and specifications.
      operationId: actor_enrichments_batch_get
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorEnrichmentsBatchGetBody'
        required: true
      responses:
        "200":
          description: A batch of list of enrichments
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/ActorEnrichment'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/enrichments/batchDelete/validate:
    post:
      tags:
      - actor
      description: "Validation endpoint for batch enrichment deletion, successful\
        \ attempt will return a token."
      operationId: actor_enrichments_batch_delete_validate
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorEnrichmentsBatchDeleteBody'
        required: true
      responses:
        "200":
          description: Examined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorEnrichmentsBatchValidationResponse'
        "400":
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/enrichments/batchDelete:
    post:
      tags:
      - actor
      description: Deletes a batch of enrichments given a list of IDs and specifications.
      operationId: actor_enrichments_batch_delete
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorEnrichmentsBatchDeleteBody'
        required: true
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/enrichments/batch/validate:
    put:
      tags:
      - actor
      description: "Validation endpoint for batch enrichment update, successful attempt\
        \ will return a token."
      operationId: actor_enrichments_batch_put_validate
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/BaseActorEnrichment'
        required: true
      responses:
        "200":
          description: Examined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorEnrichmentsBatchValidationResponse'
        "400":
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: "Validation endpoint for batch enrichment creation, successful\
        \ attempt will return a token."
      operationId: actor_enrichments_batch_post_validate
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/BaseActorEnrichment'
        required: true
      responses:
        "200":
          description: Examined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorEnrichmentsBatchValidationResponse'
        "400":
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/enrichments/batch:
    put:
      tags:
      - actor
      description: Updates a enrichment for each actor ID.
      operationId: actor_enrichments_batch_put
      requestBody:
        description: Map of IDs and enrichments
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/BaseActorEnrichment'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: Submits a enrichment for each actor ID.
      operationId: actor_enrichments_batch_post
      requestBody:
        description: Map of IDs and enrichments
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/BaseActorEnrichment'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/{id}:
    get:
      tags:
      - actor
      description: Returns specific actor by id.
      operationId: actor_id_get
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: withEnrichment
        in: query
        description: Whether to retrieve enrichments
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withSegment
        in: query
        description: Whether to retrieve segments
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: enrichmentProviderName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: enrichmentVersion
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: collectionName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: collectionProviderName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: collectionVersion
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dev
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Requested actor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiucActor'
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/{id}/segments:
    get:
      tags:
      - actor
      description: Returns all matched segment collections the actor belonged to by
        collectionName.
      operationId: actor_id_segments_get
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collectionName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dev
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Requested segment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorSegmentCollections'
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    put:
      tags:
      - actor
      description: Update a segment collection for the specific actor by segment name
      operationId: actor_id_segments_put
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The segment collections to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorSegmentCollections'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: Add a new segment collection for the specific actor
      operationId: actor_id_segments_post
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new segment collections to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorSegmentCollections'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    delete:
      tags:
      - actor
      description: Deletes all matched segments for specific actor by segmentCollectionName
      operationId: actor_id_segments_delete
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collectionName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/{id}/enrichments:
    get:
      tags:
      - actor
      description: "Returns all matched enrichment for the specific actor by type,\
        \ providerName and version."
      operationId: actor_id_enrichments_get
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dev
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: A list of actor enrichments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorEnrichment'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    put:
      tags:
      - actor
      description: "Update the enrichments for specific actor by type, providerName\
        \ and version."
      operationId: actor_id_enrichments_put
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new enrichments to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseActorEnrichment'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    post:
      tags:
      - actor
      description: Submits a new enrichment for specific message.
      operationId: actor_id_enrichments_post
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new enrichment to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseActorEnrichment'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
    delete:
      tags:
      - actor
      description: "Delete the enrichments for specific actor by type, providerName\
        \ and version"
      operationId: actor_id_enrichments_delete
      parameters:
      - name: id
        in: path
        description: Actor ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: enrichmentName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: providerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /actor/batchGet:
    post:
      tags:
      - actor
      description: Returns a batch of actors given a list of IDs and specifications.
      operationId: actor_batch_get
      requestBody:
        description: List of IDs and specifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorBatchGetBody'
        required: true
      responses:
        "200":
          description: A batch of actors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UiucActor'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.actor_controller
  /messageMessageGraph/{id}:
    get:
      tags:
      - graph
      description: Gets specific message-message graph information by id.
      operationId: message_message_graph_id_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested graph
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageMessageGraph'
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    put:
      tags:
      - graph
      description: Update the specific message-message graph by id.
      operationId: message_message_graph_id_put
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new graph to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageMessageGraph'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    delete:
      tags:
      - graph
      description: Delete the specific graph by id.
      operationId: message_message_graph_id_delete
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /messageMessageGraph/list:
    get:
      tags:
      - graph
      description: Gets graph IDs by providing query keys.
      operationId: message_message_graph_list_get
      parameters:
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: graphName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: distanceName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeStamp
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Requested graph IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /messageMessageGraph:
    post:
      tags:
      - graph
      description: Submits a new graph.
      operationId: message_message_graph_post
      requestBody:
        description: The new graph to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageMessageGraph'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /messageMessageGraph/{id}/neighbor:
    get:
      tags:
      - graph
      description: Gets the neighbors for specific node from specific graph by graph
        id and message's id.
      operationId: message_message_graph_id_neighbor_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: messageId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Requested neighbors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphEdge'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorMessageGraph/{id}:
    get:
      tags:
      - graph
      description: Gets specific actor-message graph information by id.
      operationId: actor_message_graph_id_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested graph
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorMessageGraph'
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    put:
      tags:
      - graph
      description: Update the specific actor-message graph by id.
      operationId: actor_message_graph_id_put
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new graph to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorMessageGraph'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    delete:
      tags:
      - graph
      description: Delete the specific graph by id.
      operationId: actor_message_graph_id_delete
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorMessageGraph/list:
    get:
      tags:
      - graph
      description: Gets graph IDs by providing query keys.
      operationId: actor_message_graph_list_get
      parameters:
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: graphName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: distanceName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeStamp
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Requested graph IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorMessageGraph:
    post:
      tags:
      - graph
      description: Submits a new graph.
      operationId: actor_message_graph_post
      requestBody:
        description: The new graphs to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorMessageGraph'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorMessageGraph/{id}/neighbor:
    get:
      tags:
      - graph
      description: Gets the neighbors for specific node from specific graph by graph
        id and message or actor id.
      operationId: actor_message_graph_id_neighbor_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: messageId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: actorId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Requested neighbors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphEdge'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorActorGraph/{id}:
    get:
      tags:
      - graph
      description: Gets specific actor-actor graph information by id.
      operationId: actor_actor_graph_id_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested graph
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorActorGraph'
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    put:
      tags:
      - graph
      description: Update the specific actor-actor graph by id.
      operationId: actor_actor_graph_id_put
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The new graph to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorActorGraph'
        required: true
      responses:
        "200":
          description: Updated
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
    delete:
      tags:
      - graph
      description: Delete the specific graph by id.
      operationId: actor_actor_graph_id_delete
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Deleted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "404":
          description: id not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorActorGraph/list:
    get:
      tags:
      - graph
      description: Gets graph IDs by providing query keys.
      operationId: actor_actor_graph_list_get
      parameters:
      - name: providerName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: graphName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: distanceName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeStamp
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Requested graph IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorActorGraph:
    post:
      tags:
      - graph
      description: Submits a new graph.
      operationId: actor_actor_graph_post
      requestBody:
        description: The new graphs to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorActorGraph'
        required: true
      responses:
        "201":
          description: Posted
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "409":
          description: Input already exists
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
  /actorActorGraph/{id}/neighbor:
    get:
      tags:
      - graph
      description: Gets the neighbors for specific node from specific graph by graph
        id and actor id.
      operationId: actor_actor_graph_id_neighbor_get
      parameters:
      - name: id
        in: path
        description: Graph ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: actorId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Requested neighbors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphEdge'
                x-content-type: application/json
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid query
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: uiuc_incas_server.controllers.graph_controller
components:
  schemas:
    MessageIdResponse:
      type: object
      properties:
        globalId:
          type: string
        mediaId:
          type: string
      example:
        globalId: globalId
        mediaId: mediaId
    MessageEnrichmentsBatchGetBody:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        enrichmentName:
          type: string
        providerName:
          type: string
        version:
          type: string
        dev:
          type: boolean
    MessageEnrichmentsBatchDeleteBody:
      required:
      - enrichmentName
      - ids
      - providerName
      - version
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        enrichmentName:
          type: string
        providerName:
          type: string
        version:
          type: string
    MessageBatchGetBody:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        withEnrichment:
          type: boolean
        enrichmentName:
          type: string
        providerName:
          type: string
        version:
          type: string
        dev:
          type: boolean
    MessageEnrichmentsBatchValidationResponse:
      type: object
      properties:
        idInvalid:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MessageEnrichment'
        valueInvalid:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MessageEnrichment'
        valueNotFound:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MessageEnrichment'
        valueExisted:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MessageEnrichment'
      example:
        valueNotFound:
          key: null
        valueExisted:
          key: null
        idInvalid:
          key: ""
        valueInvalid:
          key: null
    ActorIdResponse:
      type: object
      properties:
        globalId:
          type: string
        actorId:
          type: string
      example:
        actorId: actorId
        globalId: globalId
    ActorEnrichmentsBatchGetBody:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        enrichmentName:
          type: string
        providerName:
          type: string
        version:
          type: string
        dev:
          type: boolean
    ActorEnrichmentsBatchDeleteBody:
      required:
      - enrichmentName
      - ids
      - providerName
      - version
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        enrichmentName:
          type: string
        providerName:
          type: string
        version:
          type: string
    ActorBatchGetBody:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        withEnrichment:
          type: boolean
        withSegment:
          type: boolean
        enrichmentName:
          type: string
        enrichmentProviderName:
          type: string
        enrichmentVersion:
          type: string
        collectionName:
          type: string
        collectionProviderName:
          type: string
        collectionVersion:
          type: string
        dev:
          type: boolean
    ActorEnrichmentsBatchValidationResponse:
      type: object
      properties:
        idInvalid:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorEnrichment'
        valueInvalid:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorEnrichment'
        valueNotFound:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorEnrichment'
        valueExisted:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorEnrichment'
      example:
        valueNotFound:
          key: null
        valueExisted:
          key: null
        idInvalid:
          key: ""
        valueInvalid:
          key: null
    ActorSegmentsBatchGetBody:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        collectionName:
          type: string
        providerName:
          type: string
        version:
          type: string
        dev:
          type: boolean
    ActorSegmentsBatchDeleteBody:
      required:
      - collectionName
      - ids
      - providerName
      - version
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        collectionName:
          type: string
        providerName:
          type: string
        version:
          type: string
    ActorSegmentsBatchValidationResponse:
      type: object
      properties:
        idInvalid:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorSegmentCollections'
        valueInvalid:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorSegmentCollections'
        valueNotFound:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorSegmentCollections'
        valueExisted:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorSegmentCollections'
      example:
        valueNotFound:
          key: null
        valueExisted:
          key: null
        idInvalid:
          key:
            key:
              key: 0.8008282
        valueInvalid:
          key: null
    UiucMessage:
      description: "a post of social media, news, etc."
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          uiucAuthorId:
            type: string
          enrichments:
            type: array
            items:
              $ref: '#/components/schemas/MessageEnrichment'
    UiucMessageDB:
      description: "a post of social media, news, etc."
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          uiucAuthorId:
            type: string
          enrichments:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/MessageEnrichment'
    UiucActor:
      allOf:
      - $ref: '#/components/schemas/Actor'
      - type: object
        properties:
          uiucAuthorId:
            type: string
          enrichments:
            type: array
            items:
              $ref: '#/components/schemas/ActorEnrichment'
          segments:
            $ref: '#/components/schemas/ActorSegmentCollections'
    UiucActorDB:
      allOf:
      - $ref: '#/components/schemas/Actor'
      - type: object
        properties:
          uiucAuthorId:
            type: string
          enrichments:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/ActorEnrichment'
          segments:
            $ref: '#/components/schemas/ActorSegmentCollections'
    ActorSegmentCollections:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: number
          format: float
      description: Different segment collections the actor belonged to.
    UiucSegmentCollectionMeta:
      type: object
      properties:
        description:
          type: string
          description: Description of the segment.
        collectionName:
          type: string
          description: Name of the segment.
        providerName:
          type: string
          description: "The team (e.g., UIUC-DMG) who provides the segment."
        version:
          type: string
          description: "The version within the same (provider, name)."
        segments:
          type: array
          items:
            type: string
      description: Stores the meta data related to segments
      example:
        description: description
        version: version
        providerName: providerName
        collectionName: collectionName
        segments:
        - segments
        - segments
    UiucSegmentCollection:
      required:
      - uuid
      type: object
      properties:
        collectionName:
          type: string
          description: Name of the segment.
        providerName:
          type: string
          description: "The team (e.g., UIUC-DMG) who provides the segment."
        version:
          type: string
          description: "The version within the same (provider, name)."
        segments:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: number
              format: float
          description: Different segment sets with user probability.
        extraAttributes:
          $ref: '#/components/schemas/ExtraAttributes'
      description: A segment to group actors
    BaseMessageEnrichmentMeta:
      required:
      - enrichmentType
      type: object
      properties:
        description:
          type: string
          description: Description of the enrichment algorithm.
        providerName:
          type: string
          description: "The team (e.g., UIUC-DMG) who provides the enrichment."
        enrichmentName:
          type: string
          description: "The enrichment (e.g., Concern-Stance) name for the enrichment."
        version:
          type: string
          description: "The version within the same (provider, name)."
        enrichmentType:
          type: string
          description: For discriminator
          enum:
          - category
          - numerical
          - array
          - text
      description: Stores the meta data related to enrichment algorithm.
    BaseActorEnrichmentMeta:
      required:
      - enrichmentType
      type: object
      properties:
        description:
          type: string
          description: Description of the enrichment algorithm.
        providerName:
          type: string
          description: "The team (e.g., UIUC-DMG) who provides the enrichment."
        enrichmentName:
          type: string
          description: "The enrichment (e.g., Concern-Stance) name for the enrichment."
        version:
          type: string
          description: "The version within the same (provider, name)."
        enrichmentType:
          type: string
          description: For discriminator
          enum:
          - category
          - numerical
          - array
          - text
      description: Stores the meta data related to enrichment algorithm.
    CategoryMessageEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
      - type: object
        properties:
          categories:
            type: array
            items:
              type: string
        description: Defines all available categories in category message enrichment.
    NumericalMessageEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
      - type: object
    ArrayMessageEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
      - type: object
        properties:
          labelMap:
            type: object
            additionalProperties:
              type: integer
        description: "Defines the hash map (class, posID) for multi-label regression/classification."
    TextMessageEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichmentMeta'
      - type: object
    CategoryActorEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichmentMeta'
      - type: object
        properties:
          categories:
            type: array
            items:
              type: string
        description: Defines all available categories in category actor enrichment.
    NumericalActorEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichmentMeta'
      - type: object
    ArrayActorEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichmentMeta'
      - type: object
        properties:
          labelMap:
            type: object
            additionalProperties:
              type: integer
        description: "Defines the hash map of (class, posID) for multi-class regression/classification."
    TextActorEnrichmentMeta:
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichmentMeta'
      - type: object
    MessageEnrichmentMeta:
      type: object
      description: This is the unified interface for message enrichment algorithm
        meta information.
      discriminator:
        propertyName: enrichment_type
        mapping:
          category: CategoryMessageEnrichmentMeta
          numerical: NumericalMessageEnrichmentMeta
          array: ArrayMessageEnrichmentMeta
          text: TextMessageEnrichmentMeta
      oneOf:
      - $ref: '#/components/schemas/CategoryMessageEnrichmentMeta'
      - $ref: '#/components/schemas/NumericalMessageEnrichmentMeta'
      - $ref: '#/components/schemas/ArrayMessageEnrichmentMeta'
      - $ref: '#/components/schemas/TextMessageEnrichmentMeta'
    ActorEnrichmentMeta:
      type: object
      description: This is the unified interface for actor enrichment algorithm meta
        information.
      discriminator:
        propertyName: enrichment_type
        mapping:
          category: CategoryActorEnrichmentMeta
          numerical: NumericalActorEnrichmentMeta
          array: ArrayActorEnrichmentMeta
          text: TextActorEnrichmentMeta
      oneOf:
      - $ref: '#/components/schemas/CategoryActorEnrichmentMeta'
      - $ref: '#/components/schemas/NumericalActorEnrichmentMeta'
      - $ref: '#/components/schemas/ArrayActorEnrichmentMeta'
      - $ref: '#/components/schemas/TextActorEnrichmentMeta'
    BaseMessageEnrichment:
      required:
      - enrichmentType
      type: object
      properties:
        providerName:
          type: string
          description: "The team (e.g., UIUC-DMG) who provides the enrichment."
        enrichmentName:
          type: string
          description: "The enrichment (e.g., Concern-Stance) name for the enrichment."
        version:
          type: string
          description: "The version within the same (provider, name)."
        enrichmentType:
          type: string
          description: For discriminator
          enum:
          - category
          - numerical
          - array
          - text
      description: Stores data fields common to all types of message enrichment.
    CategoryMessageEnrichment:
      description: This defines a enumeration/category enrichment.
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichment'
      - type: object
        properties:
          attributeValue:
            type: string
          confidence:
            maximum: 1.0
            minimum: 0.0
            type: number
            description: "The confidence that this enrichment is correct, expressed\
              \ as a percentage between 0.0 and 1.0"
            format: double
    NumericalMessageEnrichment:
      description: Defines a numeric enrichment.
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichment'
      - type: object
        properties:
          attributeValue:
            type: number
            format: float
          confidence:
            maximum: 1.0
            minimum: 0.0
            type: number
            description: "The confidence that this enrichment is correct, expressed\
              \ as a percentage between 0.0 and 1.0"
            format: double
    ArrayMessageEnrichment:
      description: Defines a vector/matrix/tensor or multi-label enrichment.
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichment'
      - type: object
        properties:
          attributeValue:
            type: array
            items:
              type: number
              format: float
          confidence:
            type: array
            description: "The confidence that this enrichment is correct, expressed\
              \ as a percentage between 0.0 and 1.0"
    TextMessageEnrichment:
      description: This defines a text enrichment.
      allOf:
      - $ref: '#/components/schemas/BaseMessageEnrichment'
      - type: object
        properties:
          attributeValue:
            type: string
          confidence:
            maximum: 1.0
            minimum: 0.0
            type: number
            description: "The confidence that this enrichment is correct, expressed\
              \ as a percentage between 0.0 and 1.0"
            format: double
    MessageEnrichment:
      type: object
      description: This is the unified interface for message enrichment output.
      discriminator:
        propertyName: enrichment_type
        mapping:
          category: CategoryMessageEnrichment
          numerical: NumericalMessageEnrichment
          array: ArrayMessageEnrichment
          text: TextMessageEnrichment
      oneOf:
      - $ref: '#/components/schemas/CategoryMessageEnrichment'
      - $ref: '#/components/schemas/NumericalMessageEnrichment'
      - $ref: '#/components/schemas/ArrayMessageEnrichment'
      - $ref: '#/components/schemas/TextMessageEnrichment'
    BaseActorEnrichment:
      required:
      - enrichmentType
      type: object
      properties:
        providerName:
          type: string
          description: "The team (e.g., USC) who provides the enrichment."
        enrichmentName:
          type: string
          description: "The enrichment (e.g., age, gender) name for the enrichment."
        version:
          type: string
          description: "The version within the same (provider, enrichmentName)."
        enrichmentType:
          type: string
          description: For discriminator
          enum:
          - category
          - numerical
          - array
          - text
      description: Stores data fields common to all types of actor enrichment.
    CategoryActorEnrichment:
      description: Defines a enumeration/category enrichment for actor.
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichment'
      - type: object
        properties:
          attributeValue:
            type: string
          confidence:
            maximum: 1.0
            minimum: 0.0
            type: number
            description: "The confidence that this enrichment is correct, expressed\
              \ as a percentage between 0.0 and 1.0"
            format: double
    NumericalActorEnrichment:
      description: Defines a numerical enrichment for actor.
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichment'
      - type: object
        properties:
          attributeValue:
            type: number
          confidence:
            maximum: 1.0
            minimum: 0.0
            type: number
            description: "The confidence that this enrichment is correct, expressed\
              \ as a percentage between 0.0 and 1.0"
            format: double
    ArrayActorEnrichment:
      description: Defines a vector/matrix/tensor or multi-label enrichment for actor.
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichment'
      - type: object
        properties:
          attributeValue:
            type: array
            items:
              type: number
              format: float
          confidence:
            type: array
            description: "The confidence that this enrichment is correct, expressed\
              \ as a percentage between 0.0 and 1.0"
            items:
              maximum: 1.0
              minimum: 0.0
              type: number
              format: double
    TextActorEnrichment:
      description: This defines a text enrichment for actor.
      allOf:
      - $ref: '#/components/schemas/BaseActorEnrichment'
      - type: object
        properties:
          attributeValue:
            type: string
          confidence:
            maximum: 1.0
            minimum: 0.0
            type: number
            description: "The confidence that this enrichment is correct, expressed\
              \ as a percentage between 0.0 and 1.0"
            format: double
    ActorEnrichment:
      type: object
      description: This is the unified interface for actor enrichment output.
      discriminator:
        propertyName: enrichment_type
        mapping:
          enumeration: CategoryActorEnrichment
          numerical: NumericalActorEnrichment
          array: ArrayActorEnrichment
          text: TextActorEnrichment
      oneOf:
      - $ref: '#/components/schemas/CategoryActorEnrichment'
      - $ref: '#/components/schemas/NumericalActorEnrichment'
      - $ref: '#/components/schemas/ArrayActorEnrichment'
      - $ref: '#/components/schemas/TextActorEnrichment'
    GraphEdge:
      required:
      - edgeType
      type: object
      properties:
        edgeType:
          type: string
          description: For discriminator
        actionType:
          type: string
        srcId:
          type: string
        dstId:
          type: string
        distance:
          maximum: 1.0
          minimum: 0.0
          type: number
          format: float
        weight:
          type: number
          format: float
      example:
        actionType: actionType
        distance: 0.08008282
        srcId: srcId
        edgeType: edgeType
        dstId: dstId
        weight: 6.0274563
    BaseGraph:
      required:
      - graphType
      type: object
      properties:
        graphId:
          type: string
          description: This is the unique ID associated to the graph instance.
        providerName:
          type: string
          description: The team who builds this graph.
        graphName:
          type: string
          description: The name assigned to the algorithm/method used to construct
            the graph.
        distanceName:
          type: string
          description: The distance function used to build the graph.
        version:
          type: string
          description: "The version ID within the same (providerName, graphName, distanceName)"
        timeStamp:
          type: string
          description: Used for distinguishing the dynamic graph on time dimension.
        platform:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
        graphType:
          type: string
          description: For discriminator
          enum:
          - message_message
          - actor_actor
          - actor_message
      description: Defines the base graph version.
    MessageMessageGraph:
      description: Defines the message-to-message graph.
      allOf:
      - $ref: '#/components/schemas/BaseGraph'
      - type: object
        properties:
          enrichmentName:
            type: string
            description: The type of enrichment used to construct the msg2msg graph.
          edges:
            type: array
            items:
              $ref: '#/components/schemas/GraphEdge'
    MessageMessageGraphDB:
      description: Defines the message-to-message graph.
      allOf:
      - $ref: '#/components/schemas/BaseGraph'
      - type: object
        properties:
          enrichmentName:
            type: string
            description: The type of enrichment used to construct the msg2msg graph.
          edges:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/GraphEdge'
    ActorActorGraph:
      description: Defines the actor-to-actor graph.
      allOf:
      - $ref: '#/components/schemas/BaseGraph'
      - type: object
        properties:
          enrichmentName:
            type: string
            description: The type of enrichment used to construct the act2act graph.
          edges:
            type: array
            items:
              $ref: '#/components/schemas/GraphEdge'
    ActorActorGraphDB:
      description: Defines the actor-to-actor graph.
      allOf:
      - $ref: '#/components/schemas/BaseGraph'
      - type: object
        properties:
          enrichmentName:
            type: string
            description: The type of enrichment used to construct the act2act graph.
          edges:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/GraphEdge'
    ActorMessageGraph:
      description: Defines the actor-message graph.
      allOf:
      - $ref: '#/components/schemas/BaseGraph'
      - type: object
        properties:
          enrichmentName:
            type: string
            description: The type of enrichment used to construct the act-msg graph.
          edges:
            type: array
            items:
              $ref: '#/components/schemas/GraphEdge'
    ActorMessageGraphDB:
      description: Defines the actor-message graph.
      allOf:
      - $ref: '#/components/schemas/BaseGraph'
      - type: object
        properties:
          enrichmentName:
            type: string
            description: The type of enrichment used to construct the act-msg graph.
          edges:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/GraphEdge'
    Message:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        title:
          type: string
        contentText:
          type: string
        authorActor:
          $ref: '#/components/schemas/Actor'
        mediaType:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
        mediaTypeAttributes:
          $ref: '#/components/schemas/OneOfMediaTypeAttributes'
        timePublished:
          type: integer
          format: int64
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        language:
          type: string
        embeddedUrls:
          type: array
          items:
            type: string
        imageUrls:
          type: array
          items:
            type: string
        dataTags:
          type: array
          items:
            type: string
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
        extraAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtraAttribute'
    Actor:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        actorName:
          type: string
        links:
          $ref: '#/components/schemas/Links'
        entityType:
          type: string
          enum:
          - ENTITY_UNSPECIFIED
          - Person
          - Media
          - Organization
          - Government
        mediaResources:
          type: array
          items:
            $ref: '#/components/schemas/MediaResource'
        knowledgeBaseUrl:
          type: string
        language:
          type: string
        description:
          type: string
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
        extraAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtraAttribute'
    Links:
      type: object
      properties:
        self:
          type: string
    MediaResource:
      type: object
      properties:
        accountType:
          type: string
          enum:
          - MEDIA_UNSPECIFIED
          - News
          - Reddit
          - Twitter
          - Webpage
        accountId:
          type: string
        userNames:
          type: array
          items:
            type: string
        hashedUserNames:
          type: array
          items:
            type: string
        accountStatus:
          type: string
        displayNames:
          type: array
          items:
            type: string
        verified:
          type: boolean
        url:
          type: string
    Annotation:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        providerName:
          type: string
        type:
          type: string
        offsets:
          type: array
          items:
            $ref: '#/components/schemas/Offset'
        text:
          type: string
        confidence:
          type: number
          format: double
    Offset:
      type: object
      properties:
        begin:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
    ExtraAttribute:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        providerName:
          type: string
        attributeKey:
          type: string
        attributeValue:
          type: string
    OneOfMediaTypeAttributes:
      type: object
      properties:
        redditData:
          $ref: '#/components/schemas/RedditData'
        twitterData:
          $ref: '#/components/schemas/TwitterData'
    RedditData:
      type: object
    TwitterData:
      type: object
      properties:
        likeCount:
          type: integer
          format: int32
        retweetCount:
          type: integer
          format: int32
        twitterAuthorScreenname:
          type: string
        tweetId:
          type: string
        twitterUserId:
          type: string
        followingCount:
          type: integer
          format: int32
        followerCount:
          type: integer
          format: int32
        engagementType:
          type: string
          enum:
          - ENGAGEMENT_UNSPECIFIED
          - mention
          - quote
          - reply
          - retweet
          - tweet
          - page_post
        engagementParentId:
          type: string
        mentionedUsers:
          type: array
          items:
            type: string
    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    ExtraAttributes:
      type: object
      additionalProperties:
        type: string
      description: "This is a hash map (or dictionary) with strings as keys and strings\
        \ as values, that is used to put custom user data on an object"

